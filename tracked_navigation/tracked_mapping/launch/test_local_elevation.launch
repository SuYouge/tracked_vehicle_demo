<launch>
    <!-- elevation map -->
    <node pkg="elevation_mapping_demos" type="tf_to_pose_publisher.py" name="tf_to_pose" output="screen">
        <param name="from_frame" type="string" value="/map"/>
        <param name="to_frame" type="string" value="/odom"/>
    </node>
    <node pkg="elevation_mapping" type="elevation_mapping" name="local_elevation_mapping" output="screen">
        <remap from="/local_elevation_mapping/odom_pose" to="/odom_pose"/>
        <rosparam command="load" file="$(find tracked_description)/config/heightmap_config/robot.yaml" />
        <rosparam command="load" file="$(find tracked_description)/config/heightmap_config/perfect.yaml" />
        <rosparam command="load" file="$(find tracked_description)/config/heightmap_config/postprocessor_pipeline.yaml" />
    </node>
    <!-- Launch the grid map filters demo node. -->
    <node pkg="grid_map_demos" type="filters_demo" name="grid_map_filter_demo" output="screen">
        <param name="input_topic" value="/local_elevation_mapping/elevation_map" />
        <param name="output_topic" value="filtered_map" />
        <rosparam command="load" file="$(find tracked_description)/config/grid_map_config/normal.yaml" />
    </node>
    <!-- Load the general parameters (except for filter chain) for this demo. -->
    <rosparam command="load" file="$(find tracked_description)/config/grid_map_config/filters_demo.yaml" />
    <!-- Launch the grid map visualizer. -->
    <node pkg="grid_map_visualization" type="grid_map_visualization" name="grid_map_visualization" output="screen">
        <rosparam command="load" file="$(find tracked_description)/config/grid_map_config/local_slope.yaml" />
    </node>
</launch>